{"version":3,"sources":["C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\Bot.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\Context.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\GameMaster.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\Logger.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\MCTSBot.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\RandomBot.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\Rational.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\Replay.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\State.tonyu"],"names":[],"mappings":"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","sourcesContent":["\r\n\\play(ctx, s:State):Action {\r\n    throw new Error(\"Abstract: メソッドplayが実装されていません\");    \r\n}","var player:number;\r\nvar players; // Player[]\r\nvar debug:boolean;","\r\nvar state;\r\nvar context:Context;\r\nlet logger;\r\n/*\\addPlayerIndex() {\r\n    var idx=0;\r\n    for (var p of context.players) {\r\n        p.index=idx;\r\n        idx++;\r\n    }\r\n}*/\r\n\\onAppear() {\r\n   // addPlayerIndex();\r\n    //state=initial;\r\n}\r\n//var interval=30;\r\n\\step() {\r\n     if (gameover()) throw new Error(\"Game is over\");\r\n    if (state.nextIsEvent(context)) {\r\n        let events=state.actionsEvents(context);\r\n        let rate=rnd(),ratesum=0,selevent;\r\n        for (let event of events) {\r\n            if (typeof event.prob!==\"number\") throw new Error(\"prob is not set\");\r\n            ratesum+=event.prob;\r\n            if (rate<ratesum) {selevent=event;break;}\r\n        }\r\n        if (!selevent) throw new Error(\"Event is not selected\");\r\n        if (logger) logger.action(selevent);\r\n        state=state.next(context,selevent);\r\n        if (!state) throw new Error(\"state is null!\");\r\n        return selevent;\r\n    } else {\r\n        let bot=getBot(state.player);\r\n        let action=bot.play(context, state);\r\n        if (logger) {\r\n            logger.add(\"Player: \"+state.player);\r\n            logger.botStatus(bot);\r\n            logger.action(action);\r\n        }\r\n        state=state.next(context, action);\r\n        if (!state) throw new Error(\"state is null!\");\r\n        return action;\r\n    }\r\n}\r\n\\getBot(p:Player) {\r\n    //if (p.bot) return p.bot;\r\n    if (context.bots && context.bots[p]) return context.bots[p];\r\n    throw new Error(\"Bot not found: \"+p);\r\n}\r\n\\gameover() {\r\n    return state.gameover(context);\r\n}\r\n\\run() {\r\n    while(!gameover()) {\r\n        step();\r\n        print(state+\"\");\r\n    }\r\n}\r\n/*while(!state.gameover()) {\r\n    var action=state.player.bot.play(context, state);\r\n    state=state.next(context, action);\r\n    if (!state) throw new Error(\"state is null!\");\r\n    print(state+\"\");\r\n    if (interval) updateEx(interval);\r\n}*/\r\n//print(state);\r\n\r\n","native process;\r\nlet logFile;\r\nlet actCnt;\r\n\\new(params) {\r\n    super(params);\r\n    actCnt=1;\r\n    let argvs=[...process.argv];\r\n    argvs.shift();\r\n    argvs.shift();\r\n    argvs.shift();\r\n    argvs.shift();\r\n    logFile=logFile|| ( formatDate(new Date())+argvs.join(\"_\") ).replace(/[\\s\\/\\\\\\:\\?\\*\\<\\>\\|]/g,\"_\")+\".txt\";\r\n    print(\"logFileName\",logFile);\r\n    logFile=file(logFile);\r\n    if (logFile.exists()) {\r\n        let lp=/\\[(\\d+)\\]Action:/;\r\n        for (let line of logFile.lines()) {\r\n            let m=lp.exec(line);\r\n            if (m) {\r\n                actCnt=m[1]-(-1);\r\n            }\r\n        }\r\n        print(\"actCnt resumed :\",actCnt);\r\n    }\r\n}\r\n\\formatDate(d) {\r\n    let p=\\(n){return ((10000+n)+\"\").substring(3,5);}; \r\n    return (1900+d.getYear())+\"/\"+ p(d.getMonth()+1) +\"/\"+p(d.getDate())+\" \"+\r\n    p(d.getHours())+\":\"+p(d.getMinutes())+\":\"+p(d.getSeconds());\r\n}\r\n\\add(line) {\r\n    logFile.appendText(formatDate(new Date())+\": \"+line+\"\\n\");\r\n}\r\n\\action(act) {\r\n    act=$JSON.stringify(act);\r\n    add(`[${actCnt}]Action: ${act}`);\r\n    actCnt++;\r\n}\r\n\\botStatus(bot) {\r\n    add(`Bot: ITER=${bot.iterated} EXP=${bot.expcount} T/O=${bot.timeoutCount}`);\r\n    let lastNode=bot.lastRootNode;\r\n    let lastActions=bot.lastActions;\r\n    if (lastNode && lastActions) {\r\n        let sn=[];\r\n        for (let a=0;a<lastNode.subnodes.length;a++) {\r\n            let qc=bot.q(lastNode,a);\r\n            sn.push{action:lastActions[a],qc};\r\n        }\r\n        sn.sort \\(a,b) {\r\n            return b.qc-a.qc;\r\n        };\r\n        if (sn.length==0) return;\r\n        let qnmax=sn[0].qc;\r\n        let qns=sn.map\\(e) {\r\n            return floor(e.qc*100/qnmax);\r\n        };\r\n        add(\"Qn: Max=\"+qnmax+\" \"+$JSON.stringify(qns));\r\n    }\r\n}\r\n\\argv() {\r\n    add(\"argv: \"+process.argv.join(\" \"));\r\n}","extends Bot;\r\n//https://blog.brainpad.co.jp/entry/2018/04/05/163000\r\nnative performance;\r\nnative process;\r\nnative v8;\r\nnative require;\r\nnative gc;\r\n//native os;\r\nvar Cp;\r\nvar expandThresh;\r\nvar value; // (ctx, player, state)=>number (playerにとってのstateの評価値)\r\nvar iteration;\r\nvar player;\r\nlet timeout;\r\nlet lastRootNode, lastActions;\r\nlet timeoutCount=0;\r\nlet expcount=0;\r\nlet iterated=0;\r\nlet os;\r\n//var rootNode={};\r\n/*Node={\r\n    parent?: Node,\r\n    state:State,\r\n    q: Rational\r\n    n: number,\r\n    subnodes: Node[]?\r\n}*/\r\n\\initNodeValues(state,actions) {\r\n    return actions.map\\{return {q:new Rational(0,0), n:rnd()};};\r\n}\r\n\\expand(ctx:Context, node) {\r\n    /*var sk=s.id();\r\n    if (nodes[sk]) throw new Error(sk+\" already found\");*/\r\n    if (node.n<expandThresh) throw new Error(node.n+\"<\"+expandThresh);\r\n    let s:State = getState(ctx, node);\r\n    if (node.subnodes) throw new Error(s+\" already expanded\");\r\n    let actions=s.actionsEvents(ctx);//TODO\r\n    let vals=initNodeValues(s,actions);\r\n    node.subnodes=vals.map \\(r, i) {\r\n        //let a=node.actions[i];\r\n        return {\r\n            parent: node, \r\n            //state: s.next(ctx,a),\r\n            q:r.q, \r\n            n:r.n, \r\n            //a:str(a),\r\n            subnodes: null,\r\n        };\r\n    };\r\n    expcount++;\r\n    return node;\r\n}\r\n\\str(s) {\r\n    var r=s+\"\";\r\n    if (r==\"[object Object]\") return s;\r\n    return r;\r\n}\r\n\\c(node, a:Number) {\r\n    var nsa=n(node,a);\r\n    var _n=n(node);\r\n    if (nsa<1 || _n<1) return 1000000+_n;\r\n    return nanc( Cp*sqrt(2*$Math.log(_n))/nsa );\r\n}\r\n\\q(node, a:Number) {\r\n    if (a==null) {\r\n        return node.q.value;\r\n    } else {\r\n        if (!node.subnodes) throw new Error(\"Not expanded\");\r\n        return node.subnodes[a].q.value;\r\n    }\r\n}\r\n\\n(node, a:Number) {\r\n    if (a==null) {\r\n        return nanc( node.n );\r\n    } else {\r\n        if (!node.subnodes) throw new Error(\"Not expanded\");\r\n        return nanc( node.subnodes[a].n );\r\n    }\r\n}\r\n\\selection(ctx:Context, node) {\r\n    // return leaf node\r\n    if (!node.subnodes) throw new Error(getState(ctx,n)+\"Not expanded\");\r\n    while (true) {\r\n        var acts=node.subnodes;\r\n        let state=getState(ctx,node);\r\n        var sgn=(state.player===player?1:-1);\r\n        node.n+=1;\r\n        if (!acts || acts.length==0) break;\r\n        var ma=-1,mqc=0,test;\r\n        for (var a=0;a<acts.length;a++) {\r\n            var qc=q(node,a)*sgn+c(node,a);\r\n            //acts[a].test=\"q=\"+q(node,a)*sgn+\" c=\"+c(node,a);\r\n            if (ma<0 || qc>=mqc) {\r\n                mqc=qc;\r\n                ma=a;\r\n            }\r\n        }\r\n        //acts[ma].qc=test;\r\n        //acts[ma].n+=1;\r\n        node=acts[ma];\r\n    }\r\n    return node;\r\n}\r\n\\depth(node) {\r\n    let res=0;\r\n    while(node) {\r\n        node=node.parent;\r\n        res++;\r\n    }\r\n    return res;\r\n}\r\n\\play(ctx:Context, s:State):Action {    \r\n    if (!os && typeof require===\"function\") {\r\n        os=require(\"os\");\r\n    }\r\n    //print(typeof os, typeof require);\r\n    let memlim=1*1000*1000*1000;\r\n    expcount=0;\r\n    lastRootNode=null;\r\n    timeoutCount=0;\r\n    var rootNode={\r\n        parent: null, \r\n        state: s,\r\n        q:new Rational(0,0), \r\n        n:expandThresh+1, \r\n        subnodes: null,\r\n    };\r\n    player=s.player;\r\n    nanc(expandThresh);\r\n    expand(ctx,rootNode);\r\n    iterated=0;\r\n    let stime=performance.now();\r\n    if (typeof gc===\"function\") {\r\n        let mu=process.memoryUsage();\r\n        gc();\r\n        let mu2=process.memoryUsage();\r\n        print(\"GC : \"+mu.heapUsed+\"/\"+mu.heapTotal+\" -> \"+mu2.heapUsed+\"/\"+mu2.heapTotal);\r\n    }\r\n    let mu;\r\n    for (var i=0;i<iteration;i++) {\r\n        let leaf;\r\n        let expRecur=0;\r\n        let mem;\r\n        while(true) {\r\n            leaf=selection(ctx, rootNode);\r\n            mu=process.memoryUsage();\r\n            let memAvail=(mu.heapUsed<memlim);\r\n            if (!memAvail) break;\r\n            if (n(leaf)<expandThresh) break;\r\n            if (leaf.subnodes && leaf.subnodes.length==0) break;\r\n            expand(ctx, leaf);\r\n            expRecur++;\r\n            \r\n            if (expRecur%10==0) {\r\n                print(\"exp: recur= \"+expRecur+\"  q=\"+leaf.q+\"  n=\"+leaf.n+\r\n                \" Heap \"+mu.heapUsed+\"/\"+mu.heapTotal);\r\n            }\r\n        }\r\n        iterated++;\r\n        //if (mem && mem<=memlim) break;\r\n        //if (mu && mu.heapUsed>memlim) break;\r\n        if (performance.now()-stime>5000) {\r\n            print(\"Progress: iter=\", iterated, \" exp=\" ,expcount, \" Mem= \"+(\r\n                mu&&mu.heapUsed+\"/\"+mu.heapTotal\r\n            )+\" Depth= \"+depth(leaf));\r\n            stime+=5000;\r\n        }\r\n        // print(\"leaf\", leaf);\r\n        var endState=rollout(ctx, leaf, timeout);\r\n        var v=value(ctx, s.player, endState);\r\n        backup(leaf, v);\r\n        /*let leafS=getState(ctx, leaf);\r\n        if (leafS.gameover() && rootNode.subnodes.indexOf(leaf)>=0) {\r\n            print(\"GOV\", v, leafS+\"\");\r\n        }*/\r\n        //if (expcount>=3000) break;\r\n    }\r\n    //print (\"RN\",rootNode);\r\n    var ma=-1,mqc=0;\r\n    for (var a=0;a<rootNode.subnodes.length;a++) {\r\n        var qc=q(rootNode,a);\r\n        //print(\"QC\", a,qc);\r\n        if (ma<0 || qc>=mqc) {\r\n            mqc=qc;\r\n            ma=a;\r\n        }\r\n    }\r\n    var acts=s.actionsEvents(ctx);\r\n    //print (acts.length , rootNode.subnodes.length, ma);\r\n    if (!acts[ma]) throw new Error(\"Action not found \"+ma);\r\n    print(\"EXP\",expcount,\" TO\",timeoutCount);\r\n    lastRootNode=rootNode;\r\n    lastActions=acts;\r\n    return acts[ma];\r\n}\r\n\\backup(node, value:Number) {\r\n    while(node) {\r\n        node.q=node.q.inc(value);\r\n        node=node.parent;\r\n    }\r\n}\r\n\r\n\\rollout(ctx, node, timeout) {\r\n    var state=getState(ctx, node);\r\n    var t=new Date().getTime();\r\n    while (!state.gameover(ctx)) {\r\n        var a=playRandom(ctx, state);\r\n        state=state.next(ctx, a);\r\n        if (new Date().getTime()-t>timeout) {timeoutCount++;break;}\r\n    }\r\n    return state;\r\n}\r\n\r\n\\getState(ctx, node){\r\n    //if (node.state) return node.state;\r\n    var p=node.parent;\r\n    if (!p) {\r\n        if (!node.state) throw new Error(\"Root not should have state\");\r\n        return node.state;\r\n    }\r\n    var idx=p.subnodes.indexOf(node);\r\n    if (idx<0) throw new Error(\"Index not found\");\r\n    //var act=p.subnodes[idx];\r\n    //if (!act) throw new Error(\"Action not found \"+idx);\r\n    //throw new Error(\"ERA-\");\r\n    let ps=getState(ctx,p);\r\n    let acts=ps.actionsEvents(ctx);\r\n    let res=ps.next(ctx, acts[idx]);\r\n    return res;\r\n    //node.state=res;\r\n    //return node.state;\r\n}\r\n\r\n\\playRandom(ctx:Context, s:State):Action {\r\n    if (!ctx) throw new Error(\"CTX is null\");\r\n    var acts=s.actionsEvents(ctx);\r\n    var a=acts[rnd(acts.length)];\r\n    return a;\r\n}\r\n\\nanc(v) {\r\n    if (typeof v!==\"number\") throw new Error(\"null\");\r\n    if (v!==v) throw new Error(\"Nan\");\r\n    return v;\r\n}\r\n/*\\hasNode(s:State) {\r\n    var sk=s.id();\r\n    return nodes[sk];\r\n}\r\n\\getNode(s:State) {\r\n    var sk=s.id();\r\n    if (!nodes[sk]) throw new Error(sk+\" not found\");\r\n    return nodes[sk];\r\n}*/","extends Bot;\r\n\r\n\\play(ctx:Context, s:State):Action {\r\n    if (!ctx) throw new Error(\"CTX is null\");\r\n    var acts=s.actionsEvents(ctx);\r\n    // todo: Event\r\n    var a=acts[rnd(acts.length)];\r\n    return a;\r\n}\r\n","extends TObject;\r\nvar q,n;\r\n\\new(q,n) {\r\n    this.q=q;\r\n    this.n=n;\r\n}\r\n\\inc(qby:Number) {\r\n    return new Rational(q+qby,n+1);\r\n}\r\n\\value {\r\n    if (n==0) return 0;\r\n    return nanc(q/n);\r\n}\r\n\\nanc(v) {\r\n    if (v!==v) throw new Error(q+\" / \"+n);\r\n    return v;\r\n}\r\n\\toString(){\r\n    return q+\"/\"+n;\r\n}","\r\nlet logFle;\r\nlet state: State;\r\nlet context: Context;\r\nlet lines: String[];\r\n\\new(params) {\r\n    super(params);\r\n    logFile=file(logFile);\r\n    lines=logFile.lines();\r\n}\r\n\\step():Boolean {\r\n    let pat=/Action:(.*)/;\r\n    while (true) {\r\n        let r=lines.shift();\r\n        if (!r) return false;\r\n        let m=pat.exec(r);\r\n        if (!m) continue;\r\n        let a=$JSON.parse(m[1]);\r\n        state=state.next(context, a);\r\n        return true;\r\n    }\r\n}\r\n\\dump(bot){\r\n    bot.play(context, state);\r\n    let lastNode=bot.lastRootNode;\r\n    let lastActions=bot.lastActions;\r\n    if (lastNode && lastActions) {\r\n        let sns=[];\r\n        for (let a=0;a<lastNode.subnodes.length;a++) {\r\n            let qc=bot.q(lastNode,a);\r\n            let sn=lastNode.subnodes[a];\r\n            sns.push{action:lastActions[a],qc};//, q:sn.q+\"\", n:sn.n};\r\n        }\r\n        sns.sort \\(a,b) {\r\n            return b.qc-a.qc;\r\n        };\r\n        print(sns);\r\n    }\r\n}","extends TObject;\r\nincludes EventMod;\r\nnative console;\r\n\\print(p) {\r\n    var cp=$consolePanel;\r\n    console.log.apply(console,arguments);\r\n    //cp.print.apply(cp, arguments);\r\n}\r\n//一度作成したStateオブジェクトの変数の内容を書き換えないようにしてください．\r\n// nextメソッドでは，新しく作成したStateオブジェクトを返してください．\r\n\r\nvar player:Player;//この盤面の次にプレイするプレイヤー\r\n// prevState, prevActionはなし．違う動作で同じStateに至る場合もあるので．\r\n\r\n\\next(ctx:Context, a:Action):State {\r\n    //a:Action|Event\r\n    throw new Error(\"Abstract: メソッドnextが実装されていません\");    \r\n}\r\n\r\n\\actionsEvents(ctx:Context) {\r\n    //: Action[] | Event[] \r\n    // Action:プレイヤーがとる行動\r\n    // Event :ランダムに起きる事象（サイコロなど）\r\n    // Eventオブジェクトにはフィールドprob(確率を表す0..1の数値)を含め，\r\n    // Event配列のprobの合計値が1になるようにしてください\r\n    // ActionとEventを混ぜて返すことはできません．\r\n    // 常に同じ順序で同じものを返してください\r\n    throw new Error(\"Abstract: メソッドactionsEventsが実装されていません\");    \r\n}\r\n\\gameover(ctx:Context) {\r\n    return actionsEvents(ctx).length==0;\r\n    //throw new Error(\"Abstract: メソッドgameoverが実装されていません\");    \r\n}\r\n\\id(ctx) {\r\n    throw new Error(\"Abstract: メソッドidが実装されていません\");    \r\n}\r\n\\playerIndex(ctx, p) {\r\n    return ctx.players.indexOf(p);    \r\n}\r\n\\nextIsEvent(ctx:Context) {\r\n    // この状態の次にイベントが発生する（サイコロを振るなど）場合はtrue\r\n    return false;\r\n}\r\n"]}