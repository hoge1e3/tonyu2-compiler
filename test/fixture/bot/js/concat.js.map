{"version":3,"sources":["C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\Bot.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\Context.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\GameMaster.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\Logger.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\MCTSBot.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\RandomBot.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\Rational.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\Replay.tonyu","C:\\bin\\Dropbox\\workspace\\tonyu2-compiler\\test\\fixture\\bot\\State.tonyu"],"names":[],"mappings":"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","sourcesContent":["\r\n\\play(ctx, s:State):Action {\r\n    throw new Error(\"Abstract: メソッドplayが実装されていません\");    \r\n}","var player:number;\r\nvar players; // Player[]\r\nvar debug:boolean;","\r\nvar state;\r\nvar context:Context;\r\nlet logger;\r\n/*\\addPlayerIndex() {\r\n    var idx=0;\r\n    for (var p of context.players) {\r\n        p.index=idx;\r\n        idx++;\r\n    }\r\n}*/\r\n\\onAppear() {\r\n   // addPlayerIndex();\r\n    //state=initial;\r\n}\r\n//var interval=30;\r\n\\step() {\r\n     if (gameover()) throw new Error(\"Game is over\");\r\n    if (state.nextIsEvent(context)) {\r\n        let events=state.actionsEvents(context);\r\n        let rate=rnd(),ratesum=0,selevent;\r\n        for (let event of events) {\r\n            if (typeof event.prob!==\"number\") throw new Error(\"prob is not set\");\r\n            ratesum+=event.prob;\r\n            if (rate<ratesum) {selevent=event;break;}\r\n        }\r\n        if (!selevent) throw new Error(\"Event is not selected\");\r\n        if (logger) logger.action(selevent);\r\n        state=state.next(context,selevent);\r\n        if (!state) throw new Error(\"state is null!\");\r\n        return selevent;\r\n    } else {\r\n        let bot=getBot(state.player);\r\n        let action=bot.play(context, state);\r\n        if (logger) {\r\n            logger.add(\"Player: \"+state.player);\r\n            logger.botStatus(bot);\r\n            logger.action(action);\r\n        }\r\n        state=state.next(context, action);\r\n        if (!state) throw new Error(\"state is null!\");\r\n        return action;\r\n    }\r\n}\r\n\\getBot(p:Player) {\r\n    //if (p.bot) return p.bot;\r\n    if (context.bots && context.bots[p]) return context.bots[p];\r\n    throw new Error(\"Bot not found: \"+p);\r\n}\r\n\\gameover() {\r\n    return state.gameover(context);\r\n}\r\n\\run() {\r\n    while(!gameover()) {\r\n        step();\r\n        print(state+\"\");\r\n    }\r\n}\r\n/*while(!state.gameover()) {\r\n    var action=state.player.bot.play(context, state);\r\n    state=state.next(context, action);\r\n    if (!state) throw new Error(\"state is null!\");\r\n    print(state+\"\");\r\n    if (interval) updateEx(interval);\r\n}*/\r\n//print(state);\r\n\r\n","native process;\r\nlet logFile;\r\nlet actCnt;\r\nlet replay;\r\n\\new(params) {\r\n    super(params);\r\n    actCnt=1;\r\n    let argvs=[...process.argv];\r\n    argvs.shift();\r\n    argvs.shift();\r\n    argvs.shift();\r\n    argvs.shift();\r\n    if (!logFile && params.bots) {\r\n        logFile=replSpecial( formatDate(new Date())+\"_\"+params.bots[1]+\"_vs_\"+params.bots[2] )+\".txt\";\r\n    }\r\n    logFile=logFile|| replSpecial( formatDate(new Date())+argvs.join(\"_\") )+\".txt\";\r\n    print(\"logFileName\",logFile);\r\n    logFile=file(logFile);\r\n    if (logFile.exists()) {\r\n        let lp=/\\[(\\d+)\\]Action:/;\r\n        for (let line of logFile.lines()) {\r\n            let m=lp.exec(line);\r\n            if (m) {\r\n                actCnt=m[1]-(-1);\r\n            }\r\n        }\r\n        print(\"actCnt resumed :\",actCnt);\r\n    } else if (replay && replay.linesRead && replay.actCnt) {\r\n        actCnt=replay.actCnt;\r\n        logFile.text(\"Continue From:  \"+replay.logFile.path()+\"\\n\"+\r\n        replay.linesRead.join(\"\\n\")+\"\\n\");\r\n        add(\"Restart\");\r\n    }\r\n}\r\n\\replSpecial(f) {\r\n    return f.replace(/[\\s\\/\\\\\\:\\?\\*\\<\\>\\|]/g,\"_\");\r\n}\r\n\\formatDate(d) {\r\n    if (!d) d=new Date();\r\n    let p=\\(n){return ((10000+n)+\"\").substring(3,5);}; \r\n    return (1900+d.getYear())+\"/\"+ p(d.getMonth()+1) +\"/\"+p(d.getDate())+\" \"+\r\n    p(d.getHours())+\":\"+p(d.getMinutes())+\":\"+p(d.getSeconds());\r\n}\r\n\\add(line) {\r\n    logFile.appendText(formatDate(new Date())+\": \"+line+\"\\n\");\r\n}\r\n\\action(act) {\r\n    act=$JSON.stringify(act);\r\n    add(`[${actCnt}]Action: ${act}`);\r\n    actCnt++;\r\n}\r\n\\botStatus(bot) {\r\n    add(`Bot: ITER=${bot.iterated} EXP=${bot.expcount} T/O=${bot.timeoutCount}`);\r\n    let lastNode=bot.lastRootNode;\r\n    let lastActions=bot.lastActions;\r\n    if (lastNode && lastActions) {\r\n        let sn=[];\r\n        for (let a=0;a<lastNode.subnodes.length;a++) {\r\n            let qc=bot.q(lastNode,a);\r\n            sn.push{action:lastActions[a],qc};\r\n        }\r\n        sn.sort \\(a,b) {\r\n            return b.qc-a.qc;\r\n        };\r\n        if (sn.length==0) return;\r\n        let qnmax=sn[0].qc;\r\n        let nz=sn.filter\\(e){return e.qc>0;};\r\n        let qnmin=nz.length && nz[nz.length-1].qc;\r\n        let qns=sn.map\\(e) {\r\n            return floor(e.qc*1000)/1000;\r\n        };\r\n        for (let i=qns.length-1;i>0;i--) {\r\n            let pi=i;\r\n            i--;\r\n            for (;i>=0;i--) {\r\n                if (qns[i]!=qns[pi]) break;\r\n            }\r\n            let len=pi-i;\r\n            i++;\r\n            if (len>1) {\r\n                qns.splice(i,len,qns[i]+\"*\"+len);\r\n            }\r\n        }\r\n        add(\"Qn: Max=\"+qnmax+\" Min=\"+qnmin+\" \"+$JSON.stringify(qns));\r\n    }\r\n}\r\n\\argv() {\r\n    add(\"argv: \"+process.argv.join(\" \"));\r\n}","extends Bot;\r\n//https://blog.brainpad.co.jp/entry/2018/04/05/163000\r\nnative performance;\r\nnative process;\r\nnative v8;\r\nnative require;\r\nnative gc;\r\n//native os;\r\nvar Cp;\r\nvar expandThresh;\r\nvar value; // (ctx, player, state)=>number (playerにとってのstateの評価値)\r\nvar iteration;\r\nvar player;\r\nlet timeout;\r\nlet lastRootNode, lastActions;\r\nlet timeoutCount=0;\r\nlet expcount=0;\r\nlet iterated=0;\r\nlet os;\r\n\\toString(){\r\n    return `mcts_${iteration}_${timeout}`;\r\n}\r\n//var rootNode={};\r\n/*Node={\r\n    parent?: Node,\r\n    state:State,\r\n    q: Rational\r\n    n: number,\r\n    subnodes: Node[]?\r\n}*/\r\n\\initNodeValues(ctx, state) {\r\n    let actions=state.actionsEvents(ctx);\r\n    if (state.nextIsEvent(ctx)) {\r\n        return actions.map\\{return {q:new Rational(0,0), n:expandThresh};};\r\n    }\r\n    return actions.map\\{return {q:new Rational(0,0), n:rnd()};};\r\n}\r\n\\expand(ctx:Context, node) {\r\n    /*var sk=s.id();\r\n    if (nodes[sk]) throw new Error(sk+\" already found\");*/\r\n    if (node.n<expandThresh) throw new Error(node.n+\"<\"+expandThresh);\r\n    let s:State = getState(ctx, node);\r\n    if (node.subnodes) throw new Error(s+\" already expanded\");\r\n    //let actions=s.actionsEvents(ctx);//TODO\r\n    let vals=initNodeValues(ctx, s);\r\n    node.subnodes=vals.map \\(r, i) {\r\n        //let a=node.actions[i];\r\n        let res={\r\n            parent: node, \r\n            //state: s.next(ctx,a),\r\n            q:r.q, \r\n            n:r.n, \r\n            //a:str(a),\r\n            subnodes: null,\r\n        };\r\n        if (r.disabled) res.disabled=true;\r\n        return res;\r\n    };\r\n    expcount++;\r\n    return node;\r\n}\r\n\\str(s) {\r\n    var r=s+\"\";\r\n    if (r==\"[object Object]\") return s;\r\n    return r;\r\n}\r\n\\c(node, a:Number) {\r\n    var nsa=n(node,a);\r\n    var _n=n(node);\r\n    if (nsa<1 || _n<1) return 1000000+_n;\r\n    return nanc( Cp*sqrt(2*$Math.log(_n))/nsa );\r\n}\r\n\\q(node, a:Number) {\r\n    if (a==null) {\r\n        return node.q.value;\r\n    } else {\r\n        if (!node.subnodes) throw new Error(\"Not expanded\");\r\n        return node.subnodes[a].q.value;\r\n    }\r\n}\r\n\\n(node, a:Number) {\r\n    if (a==null) {\r\n        return nanc( node.n );\r\n    } else {\r\n        if (!node.subnodes) throw new Error(\"Not expanded\");\r\n        return nanc( node.subnodes[a].n );\r\n    }\r\n}\r\n\\selection(ctx:Context, node) {\r\n    // return leaf node\r\n    if (!node.subnodes) throw new Error(getState(ctx,n)+\"Not expanded\");\r\n    while (true) {\r\n        var acts=node.subnodes;\r\n        let state=getState(ctx,node);\r\n        var sgn=(state.player===player?1:-1);\r\n        node.n+=1;\r\n        if (!acts || acts.length==0) break;\r\n        var ma=-1,mqc=0,test;\r\n        for (var a=0;a<acts.length;a++) {\r\n            if (acts[a].disabled)continue;\r\n            var qc=q(node,a)*sgn+c(node,a);\r\n            //acts[a].test=\"q=\"+q(node,a)*sgn+\" c=\"+c(node,a);\r\n            if (ma<0 || qc>=mqc) {\r\n                mqc=qc;\r\n                ma=a;\r\n            }\r\n        }\r\n        //if (ma<0) break;\r\n        //acts[ma].qc=test;\r\n        //acts[ma].n+=1;\r\n        node=acts[ma];\r\n        if(!node) throw new Error(`Node null ${ma}`);\r\n    }\r\n    return node;\r\n}\r\n\\depth(node) {\r\n    let res=0;\r\n    while(node) {\r\n        node=node.parent;\r\n        res++;\r\n    }\r\n    return res;\r\n}\r\n\\play(ctx:Context, s:State):Action {    \r\n    if (!os && typeof require===\"function\") {\r\n        os=require(\"os\");\r\n    }\r\n    //print(typeof os, typeof require);\r\n    let memlim=1*1000*1000*1000;\r\n    expcount=0;\r\n    lastRootNode=null;\r\n    timeoutCount=0;\r\n    var rootNode={\r\n        parent: null, \r\n        state: s,\r\n        q:new Rational(0,0), \r\n        n:expandThresh+1, \r\n        subnodes: null,\r\n    };\r\n    player=s.player;\r\n    nanc(expandThresh);\r\n    expand(ctx,rootNode);\r\n    iterated=0;\r\n    let stime=performance.now();\r\n    if (typeof gc===\"function\") {\r\n        let mu=process.memoryUsage();\r\n        gc();\r\n        let mu2=process.memoryUsage();\r\n        print(\"GC : \"+mu.heapUsed+\"/\"+mu.heapTotal+\" -> \"+mu2.heapUsed+\"/\"+mu2.heapTotal);\r\n    }\r\n    let mu;\r\n    for (var i=0;i<iteration;i++) {\r\n        let leaf;\r\n        let expRecur=0;\r\n        let mem;\r\n        while(true) {\r\n            leaf=selection(ctx, rootNode);\r\n            mu=process.memoryUsage();\r\n            let memAvail=(mu.heapUsed<memlim);\r\n            if (!memAvail) break;\r\n            if (n(leaf)<expandThresh) break;\r\n            if (leaf.subnodes && leaf.subnodes.length==0) break;\r\n            expand(ctx, leaf);\r\n            expRecur++;\r\n            \r\n            /*if (expRecur%10==0) {\r\n                print(\"exp: recur= \"+expRecur+\"  q=\"+leaf.q+\"  n=\"+leaf.n+\r\n                \" Heap \"+mu.heapUsed+\"/\"+mu.heapTotal);\r\n            }*/\r\n        }\r\n        iterated++;\r\n        //if (mem && mem<=memlim) break;\r\n        //if (mu && mu.heapUsed>memlim) break;\r\n        if (performance.now()-stime>3000) {\r\n            let ap=actionPath(ctx,leaf);\r\n            print(\"Progress: iter=\", iterated, \" exp=\" ,expcount, \" Mem= \"+(\r\n                mu&&mu.heapUsed+\"/\"+mu.heapTotal\r\n            )+\" Path= \"+ap.map\\(a){return $JSON.stringify(a);}.join(\"->\"));\r\n            //print(ap);\r\n            stime+=3000;\r\n        }\r\n        // print(\"leaf\", leaf);\r\n        var endState=rollout(ctx, leaf, timeout);\r\n        var v=value(ctx, s.player, endState);\r\n        backup(leaf, v);\r\n        /*let leafS=getState(ctx, leaf);\r\n        if (leafS.gameover() && rootNode.subnodes.indexOf(leaf)>=0) {\r\n            print(\"GOV\", v, leafS+\"\");\r\n        }*/\r\n        //if (expcount>=3000) break;\r\n    }\r\n    //print (\"RN\",rootNode);\r\n    var ma=-1,mqc=0;\r\n    for (var a=0;a<rootNode.subnodes.length;a++) {\r\n        var qc=q(rootNode,a);\r\n        //print(\"QC\", a,qc);\r\n        if (ma<0 || qc>=mqc) {\r\n            mqc=qc;\r\n            ma=a;\r\n        }\r\n    }\r\n    var acts=s.actionsEvents(ctx);\r\n    //print (acts.length , rootNode.subnodes.length, ma);\r\n    if (!acts[ma]) throw new Error(\"Action not found \"+ma);\r\n    print(\"EXP\",expcount,\" TO\",timeoutCount);\r\n    lastRootNode=rootNode;\r\n    lastActions=acts;\r\n    return acts[ma];\r\n}\r\n\\backup(node, value:Number) {\r\n    while(node) {\r\n        node.q=node.q.inc(value);\r\n        node=node.parent;\r\n    }\r\n}\r\n\\rollout(ctx, node, timeout) {\r\n    var state=getState(ctx, node);\r\n    var t=new Date().getTime();\r\n    while (!state.gameover(ctx)) {\r\n        var a=playRandom(ctx, state);\r\n        state=state.next(ctx, a);\r\n        if (new Date().getTime()-t>timeout) {timeoutCount++;break;}\r\n    }\r\n    return state;\r\n}\r\n\\actionPath(ctx,n) {\r\n    let nodePath=[];\r\n    for (let nn=n;nn;nn=nn.parent) nodePath=[nn,...nodePath];\r\n    let res=[];\r\n    for (let i=0;i<nodePath.length-1;i++) {\r\n        let pn=nodePath[i],cn=nodePath[i+1];\r\n        let s=getState(ctx,pn);\r\n        let acts=s.actionsEvents(ctx);\r\n        let idx=pn.subnodes.indexOf(cn);\r\n        if (idx<0) throw new Error(\"Invalid path \");\r\n        res.push(acts[idx]);\r\n    }\r\n    return res;\r\n}\r\n\\getState(ctx, node){\r\n    //if (node.state) return node.state;\r\n    var p=node.parent;\r\n    if (!p) {\r\n        if (!node.state) throw new Error(\"Root not should have state\");\r\n        return node.state;\r\n    }\r\n    var idx=p.subnodes.indexOf(node);\r\n    if (idx<0) throw new Error(\"Index not found\");\r\n    //var act=p.subnodes[idx];\r\n    //if (!act) throw new Error(\"Action not found \"+idx);\r\n    //throw new Error(\"ERA-\");\r\n    let ps=getState(ctx,p);\r\n    let acts=ps.actionsEvents(ctx);\r\n    let res=ps.next(ctx, acts[idx]);\r\n    return res;\r\n    //node.state=res;\r\n    //return node.state;\r\n}\r\n\r\n\\playRandom(ctx:Context, s:State):Action {\r\n    if (!ctx) throw new Error(\"CTX is null\");\r\n    var acts=s.actionsEvents(ctx);\r\n    var a=acts[rnd(acts.length)];\r\n    return a;\r\n}\r\n\\nanc(v) {\r\n    if (typeof v!==\"number\") throw new Error(\"null\");\r\n    if (v!==v) throw new Error(\"Nan\");\r\n    return v;\r\n}\r\n/*\\hasNode(s:State) {\r\n    var sk=s.id();\r\n    return nodes[sk];\r\n}\r\n\\getNode(s:State) {\r\n    var sk=s.id();\r\n    if (!nodes[sk]) throw new Error(sk+\" not found\");\r\n    return nodes[sk];\r\n}*/","extends Bot;\r\n\r\n\\play(ctx:Context, s:State):Action {\r\n    if (!ctx) throw new Error(\"CTX is null\");\r\n    var acts=s.actionsEvents(ctx);\r\n    // todo: Event\r\n    var a=acts[rnd(acts.length)];\r\n    return a;\r\n}\r\n","extends TObject;\r\nvar q,n;\r\n\\new(q,n) {\r\n    this.q=q;\r\n    this.n=n;\r\n}\r\n\\inc(qby:Number) {\r\n    return new Rational(q+qby,n+1);\r\n}\r\n\\value {\r\n    if (n==0) return 0;\r\n    return nanc(q/n);\r\n}\r\n\\nanc(v) {\r\n    if (v!==v) throw new Error(q+\" / \"+n);\r\n    return v;\r\n}\r\n\\toString(){\r\n    return q+\"/\"+n;\r\n}","\r\nlet logFle;\r\nlet state: State;\r\nlet context: Context;\r\nlet lines: String[];\r\nlet linesRead: String[];\r\nlet actCnt:Number;\r\n\\clone() {\r\n    return new Replay{doClone:this};\r\n}\r\n\\new(params) {\r\n    if (params.doClone) {\r\n        let p=params.doClone;\r\n        logFile=p.logFile;\r\n        state=p.state;\r\n        context=p.context;\r\n        lines=p.lines;\r\n        linesRead=p.linesRead.slice();\r\n        actCnt=p.actCnt;\r\n        return;\r\n    }\r\n    super(params);\r\n    logFile=file(logFile);\r\n    lines=logFile.lines();\r\n    linesRead=[];\r\n    actCnt=1;\r\n}\r\n\\step():Boolean {\r\n    let pat=/Action:(.*)/;\r\n    while (true) {\r\n        let r=lines.shift();\r\n        linesRead.push(r);\r\n        if (!r) return false;\r\n        let m=pat.exec(r);\r\n        if (!m) continue;\r\n        actCnt++;\r\n        let a=$JSON.parse(m[1]);\r\n        state=state.next(context, a);\r\n        return true;\r\n    }\r\n}\r\n\\actionModified(a:Action) {\r\n    let res=clone();\r\n    res.state=res.state.next(context,a);\r\n    res.linesRead.push(`INSERTED [${res.actCnt}]Action: ${$JSON.stringify(a)}`);\r\n    res.actCnt++;\r\n    return res;\r\n}\r\n\r\n\\dump(bot) {\r\n    print(play1(bot));\r\n}\r\n\\play1(bot){\r\n    bot.play(context, state);\r\n    let lastNode=bot.lastRootNode;\r\n    let lastActions=bot.lastActions;\r\n    if (lastNode && lastActions) {\r\n        let sns=[];\r\n        for (let a=0;a<lastNode.subnodes.length;a++) {\r\n            let qc=bot.q(lastNode,a);\r\n            let sn=lastNode.subnodes[a];\r\n            sns.push{action:lastActions[a],qc};//, q:sn.q+\"\", n:sn.n};\r\n        }\r\n        sns.sort \\(a,b) {\r\n            return b.qc-a.qc;\r\n        };\r\n        return sns;\r\n        //print(sns);\r\n    }\r\n    return null;\r\n}","extends TObject;\r\nincludes EventMod;\r\nnative console;\r\n\\print(p) {\r\n    var cp=$consolePanel;\r\n    console.log.apply(console,arguments);\r\n    //cp.print.apply(cp, arguments);\r\n}\r\n//一度作成したStateオブジェクトの変数の内容を書き換えないようにしてください．\r\n// nextメソッドでは，新しく作成したStateオブジェクトを返してください．\r\n\r\nvar player:Player;//この盤面の次にプレイするプレイヤー\r\n// prevState, prevActionはなし．違う動作で同じStateに至る場合もあるので．\r\n\r\n\\next(ctx:Context, a:Action):State {\r\n    //a:Action|Event\r\n    throw new Error(\"Abstract: メソッドnextが実装されていません\");    \r\n}\r\n\r\n\\actionsEvents(ctx:Context) {\r\n    //: Action[] | Event[] \r\n    // Action:プレイヤーがとる行動\r\n    // Event :ランダムに起きる事象（サイコロなど）\r\n    // Eventオブジェクトにはフィールドprob(確率を表す0..1の数値)を含め，\r\n    // Event配列のprobの合計値が1になるようにしてください\r\n    // ActionとEventを混ぜて返すことはできません．\r\n    // 常に同じ順序で同じものを返してください\r\n    throw new Error(\"Abstract: メソッドactionsEventsが実装されていません\");    \r\n}\r\n\\gameover(ctx:Context) {\r\n    return actionsEvents(ctx).length==0;\r\n    //throw new Error(\"Abstract: メソッドgameoverが実装されていません\");    \r\n}\r\n\\id(ctx) {\r\n    throw new Error(\"Abstract: メソッドidが実装されていません\");    \r\n}\r\n\\playerIndex(ctx, p) {\r\n    return ctx.players.indexOf(p);    \r\n}\r\n\\nextIsEvent(ctx:Context) {\r\n    // この状態の次にイベントが発生する（サイコロを振るなど）場合はtrue\r\n    return false;\r\n}\r\n"]}