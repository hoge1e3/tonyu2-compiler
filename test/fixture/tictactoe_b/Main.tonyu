native process;
"field strict";
//$Screen.resize(200,600);

//                                              4    5   6  7     8    9  10    11             12
// node index.js test\fixture\tictactoe_b\   -r mcts 100 2  mcts  1000 2  1234  replayFile.txt 10
if (process.argv[1]=="--expose-gc") process.argv.shift();
if(!process.argv[10]){
    throw new Error("ゲーム実行回数が入力されていません！");
}
var player1 = {name:process.argv[4],iteration:process.argv[5],timeout:process.argv[6]};
var player2 = {name:process.argv[7],iteration:process.argv[8],timeout:process.argv[9]};
print(player1);
print(player2);
\botParameter(player){
    var bot;
    if(player.name == "mcts"){
        bot = new MCTSBot{value,Cp:10, expandThresh:3, iteration:Number(player.iteration), timeout:Number(player.timeout)};
    }else if(player.name == "cmcts"){
        //bot = new CornerMCTSBot{value,Cp:10, expandThresh:3, iteration:Number(player.iteration), timeout:Number(player.timeout)};
    }else{
        throw new Error("bot:",bot);
    }
    return bot;
}
let bots=[0, botParameter(player1), botParameter(player2)];

\value(ctx:Context, player: Number, state:Board) {
    /*let acts=state.actionsEvents(ctx);
    if (acts.length===0) {
        if (player===state.player) return 0;
        else return 1;
    }*/
    let win=state.gameover(ctx);
    if (!win || win===true ) {
        return 0.5;
    } else if (player===win) {
        return 1;
    } else {
        return 0;
    }
    
}

let replayFile=process.argv[11];
if(replayFile){//リプレイtrueの時
    update();
    let context=new Context{players:[1,2], bots};
    let state=initialState(context);
    let replay = new Replay{state, context, logFile: replayFile };
    let turn=process.argv[12];
    print(replay.state+"");
    for (let i=0;i<turn;i++) {
        replay.step();
        print(replay.state+"");
    }
    let bot=bots[replay.state.player];
    replay.dump(bot);
} else {
    for (let i=0;i<process.argv[10]-0 ;i++) {
        match();   
    }
}
\initialState(context) {
    let mat=new Matrix;
    let r=3;
    for (let i=0;i<r;i++) {
        for (let j=0;j<r;j++) {
            mat.set(j,i,0);
        }
    }
    let player=1;
    let state=new Board{mat,player};
    return state;
}
\match() {
    //print("iters:" ,it1, it2);
    //print("totaltimes:", tt1, tt2);
    //print("timeouts:", to1, to2);
    
    let context=new Context{players:[1,2], bots};
    let state=initialState(context);
    let logger=new Logger{bots};
    let g=new GameMaster{context, state, logger};
    print(g.state+"");
    let winner=0;
    while (!(winner=g.gameover())) {
        let a=g.step();
        print(a.x, a.y);
        print(g.state+"");
        print(value(context, g.state.player, g.state ));
        
        updateEx(1);
    }
    print("winner is ",winner);
    logger.add("Winner: "+winner);
    updateEx(60);
    
}
